{"ast":null,"code":"var _jsxFileName = \"/home/erteduarda/unb/PA/dijkstra-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Map from './components/Map';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  text-align: center;\n  padding: 20px;\n`;\n_c = Container;\nconst Button = styled.button`\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n`;\n_c2 = Button;\nfunction App() {\n  _s();\n  const [graph, setGraph] = useState(null);\n  const generateMap = () => {\n    const nodes = Array.from({\n      length: 5\n    }, (_, i) => ({\n      id: i\n    }));\n    const edges = [{\n      from: 0,\n      to: 1,\n      weight: Math.floor(Math.random() * 10 + 1)\n    }, {\n      from: 1,\n      to: 2,\n      weight: Math.floor(Math.random() * 10 + 1)\n    }, {\n      from: 2,\n      to: 3,\n      weight: Math.floor(Math.random() * 10 + 1)\n    }, {\n      from: 3,\n      to: 4,\n      weight: Math.floor(Math.random() * 10 + 1)\n    }, {\n      from: 0,\n      to: 4,\n      weight: Math.floor(Math.random() * 10 + 1)\n    }];\n    setGraph({\n      nodes,\n      edges\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Algoritmo de Dijkstra\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: generateMap,\n      children: \"Gerar Mapa\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Iniciar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), graph && /*#__PURE__*/_jsxDEV(Map, {\n      graph: graph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5uplYYmqM8Mi0cwKuZmBWcjjGpI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","Map","styled","jsxDEV","_jsxDEV","Container","div","_c","Button","button","_c2","App","_s","graph","setGraph","generateMap","nodes","Array","from","length","_","i","id","edges","to","weight","Math","floor","random","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c3","$RefreshReg$"],"sources":["/home/erteduarda/unb/PA/dijkstra-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Map from './components/Map';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 20px;\n`;\n\nconst Button = styled.button`\n  margin: 10px;\n  padding: 10px 20px;\n  font-size: 16px;\n  cursor: pointer;\n`;\n\nfunction App() {\n  const [graph, setGraph] = useState(null);\n\n  const generateMap = () => {\n    const nodes = Array.from({ length: 5 }, (_, i) => ({ id: i }));\n    const edges = [\n      { from: 0, to: 1, weight: Math.floor(Math.random() * 10 + 1) },\n      { from: 1, to: 2, weight: Math.floor(Math.random() * 10 + 1) },\n      { from: 2, to: 3, weight: Math.floor(Math.random() * 10 + 1) },\n      { from: 3, to: 4, weight: Math.floor(Math.random() * 10 + 1) },\n      { from: 0, to: 4, weight: Math.floor(Math.random() * 10 + 1) },\n    ];\n    setGraph({ nodes, edges });\n  };\n\n  return (\n    <Container>\n      <h1>Algoritmo de Dijkstra</h1>\n      <Button onClick={generateMap}>Gerar Mapa</Button>\n      <Button>Iniciar</Button>\n      {graph && <Map graph={graph} />}\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}